/* NestedScrollView(
        headerSliverBuilder: (BuildContext context, bool innerBoxIsScrolled) {
          return <Widget>[
            SliverAppBar(
              expandedHeight: 300.0,
              primary: true,
              backgroundColor: Theme.of(context).backgroundColor,
              floating: false,
              pinned: true,
              flexibleSpace: Column(
                children: <Widget>[
                  Expanded(
                    child: Row(
                      crossAxisAlignment: CrossAxisAlignment.end,
                      children: <Widget>[
                        Expanded(
                          child: FlexibleSpaceBar(
                            title: Text(name),
                            collapseMode: CollapseMode.none,/* 
                            background: CachedNetworkImage(
                                imageUrl:
                                    "https://images.pexels.com/photos/396547/pexels-photo-396547.jpeg?auto=compress&cs=tinysrgb&h=350",
                                fit: BoxFit.fitHeight), */
                          ),
                        ),
                      ],
                    ),
                  ),
                ],
              ),
            ),
          ];
        },
        body: ListView(
          children: <Widget>[
            Container(
              padding: EdgeInsets.symmetric(horizontal: 32.0, vertical: 20.0),
              child: Text(
                description,
                style:
                    Theme.of(context).textTheme.body1.copyWith(fontSize: 16.0),
              ),
            ),
            SizedBox(
              height: 16.0,
            ),
            Container(
              margin: EdgeInsets.symmetric(horizontal: 32.0),
              child: Text("Similar Content",
                  style: Theme.of(context).textTheme.subhead.copyWith(
                      fontSize: 18.0,
                      color: Colors.white,
                      fontWeight: FontWeight.bold)),
            ),
            SizedBox(
              height: 12.0,
            ),
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: <Widget>[
                SizedBox(
                  width: 16.0,
                ),
                _buildContent2(
                    context,
                    "https://myanimelist.cdn-dena.com/r/108x163/s/common/store/cover/974/85b97a507be316ff690d728b22a9c0cbeac36161057e9b8a7fb0612df2e53d98/l.jpg?s=31aae211ae94d9b5aa7d14160e7aa6dd",
                    "7.5",
                    "Forget me not"),
                _buildContent2(
                    context,
                    "https://myanimelist.cdn-dena.com/s/common/store/cover/960/d12a3c79c4d0d46235c4bd35a1cc30664f818c4f15d34ea13dc328ab80f42ba6/l.jpg",
                    "7.6",
                    "The Drops of God"),
                _buildContent2(
                    context,
                    "https://myanimelist.cdn-dena.com/s/common/store/cover/1367/0a8f4f9e7cbdfa6a3f5ca40e471df8a00ae3963a1b3894ea5a23d2a83f6ed9cd/l.jpg",
                    "8.0",
                    "Cells at Work"),
                SizedBox(
                  width: 16.0,
                ),
              ],
            )
          ],
        ),
      ), */





      Container(
      height: 160.0,
      child: Card(
        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(4.0)),
        color: Theme.of(context).cardColor,
        child: InkWell(
          borderRadius: BorderRadius.circular(4.0), // BR of the splash
          enableFeedback: true,
          onTap: () {
            // Go to the description page
            /* Navigator.push(
              context,
              MaterialPageRoute(
                  builder: (context) => DescriptionPage(
                        img: data["img"],
                        name: data["name"],
                        genre: data["genres"],
                        rating: data["rating"],
                        studio: data["studio"],
                        description: data["description"],
                        duration: data["duration"],
                        licensors: data["licensors"],
                        popularity: data["popularity"],
                        producers: data["producers"],
                        rank: data["rank"],
                        season: data["season"],
                        url: data["url"],
                        episodes: data["episodes"],
                        id: data["id"],
                      )
                  // Fat arrow notation so context is an argument and DescriptionPage is the function being invoked
                  ),
            ); */
            print(data[0]["name"] + " selected");
          },
          child: Row(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: <Widget>[
              Container(
                width: 100.0,
                height: 160.0,
                child:
                    /* DecoratedBox(
                    decoration: BoxDecoration(
                        image: DecorationImage(
                            image: CachedNetworkImageProvider(
                                data["img"]))),
                  ) */
                    Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.only(
                      topLeft: Radius.circular(4.0),
                      bottomLeft: Radius.circular(4.0),
                    ),
                    image: DecorationImage(
                      image: CachedNetworkImageProvider(
                        data[0]["img"],
                        errorListener: () {
                          print("Image failed to load");
                        },
                      ), //NetworkImage(data["img"]),
                      fit: BoxFit.fill,
                    ),
                  ),
                ),
              ),
              SizedBox(
                width: 12.0,
              ),
              Expanded(
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: <Widget>[
                    SizedBox(height: 8.0),
                    Container(
                      margin: EdgeInsets.only(right: 12.0),
                      child: Text(
                        data[0]["name"],
                        style: Theme.of(context).textTheme.title,
                        maxLines: 1,
                        overflow: TextOverflow.ellipsis,
                      ),
                    ),
                    //SizedBox(height: 10.0),
                    Expanded(
                      child: Container(
                        margin: EdgeInsets.only(right: 12.0),
                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: <Widget>[
                            Text(
                              stringFromArray(data[0]["genres"], "|"),
                              style: Theme.of(context)
                                  .textTheme
                                  .subhead
                                  .copyWith(fontSize: 16.0),
                              maxLines: 1,
                              overflow: TextOverflow.ellipsis,
                            ),
                            Text(
                              data[0]["studio"],
                              style: Theme.of(context)
                                  .textTheme
                                  .subhead
                                  .copyWith(fontSize: 16.0),
                            ),
                          ],
                        ),
                      ),
                    ),
                    Row(
                      // Rating graphic, episodes and favourite button
                      children: <Widget>[
                        Container(
                          decoration: BoxDecoration(
                            borderRadius: BorderRadius.circular(5.0),
                            //shape: BoxShape.rectangle,
                            color: Theme.of(context).accentColor,
                          ),
                          padding: EdgeInsets.symmetric(
                              horizontal: 4.0, vertical: 2.0),
                          child: Row(
                            children: <Widget>[
                              Icon(
                                Icons.star,
                                color: Colors.yellow,
                              ),
                              SizedBox(
                                width: 2.0,
                              ),
                              Text(
                                data[0]["rating"],
                                style: TextStyle(
                                    color: Colors.white,
                                    fontWeight: FontWeight.bold,
                                    fontSize: 16.0),
                              ),
                            ],
                          ),
                        ),
                        Expanded(
                          child: Text(
                            "${data[0]["episodes"]} eps Â· ${data[0]["duration"]} mins",
                            style: Theme.of(context)
                                .textTheme
                                .subhead
                                .copyWith(fontSize: 16.0),
                            textAlign: TextAlign.center,
                          ),
                        ),
                        IconButton(
                          icon: Icon(
                            Icons.favorite,
                            color: Theme.of(context).accentColor,
                          ),
                          onPressed: () {
                            setState(() {
                              _saved.remove(data[0]["id"]);
                              changeFavourites(
                                  malId: data[0]["id"], add: false);
                              print(
                                  data[0]["name"] + " removed from favourites");

                              // TODO show a toast with an undo button
                            });
                          },
                        ),
                      ],
                    ),
                  ],
                ),
              ),
            ],
          ),
        ),
      ),
    );